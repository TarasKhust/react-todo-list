{"version":3,"sources":["serviceWorker.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/TodoListItem.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/item-add-form.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/app/app.js","index.js"],"names":["Boolean","window","location","hostname","match","AppHeader","_ref","toDo","done","react_default","a","createElement","concat","SearchPanel","state","term","onSearchChange","evt","target","value","_this","setState","props","searchItem","type","className","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_list_item_TodoListItem","assign","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","ItemStatusFilter","buttons","name","_this$props","filter","onFilterChange","clazz","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","toConsumableArray","slice","addItem","text","newItem","_ref2","_ref3","toggleProperty","_ref4","search","items","length","toLowerCase","indexOf","arr","propName","oldItem","objectSpread","defineProperty","_this$state","visibleItems","doneCount","todoCount","components_app_header","search_panel","item_status_filter","components_todo_list","item_add_form_ItemAddForm","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e12fbf0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import AppHeader from './app-header';\n\nexport default AppHeader","import React from 'react';\n\nconst AppHeader = ({toDo, done}) => {\n\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>My Todo List</h1>\n\t\t\t\t<h2>{`${toDo} more to do, ${done} done`}</h2>\n\t\t\t</div>\n\t);\n};\n\nexport default AppHeader","import SearchPanel from './search-panel';\n\nexport default SearchPanel","import React, { Component } from 'react';\n\nexport default class SearchPanel extends Component {\n\n\tstate = {\n\t\tterm: '',\n\t};\n\n\tonSearchChange = (evt) => {\n\t\tconst term = evt.target.value;\n\t\tthis.setState({ term });\n\t\tthis.props.searchItem(term);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t\t<input type=\"text\"\n\t\t\t\t       className='form-control search-input'\n\t\t\t\t       placeholder='type to search'\n\t\t\t\t       value={this.state.term}\n\t\t\t\t       onChange={this.onSearchChange}\n\t\t\t\t/>\n\t\t);\n\t}\n};\n","import React from 'react';\n\nimport './todo-list-item.css';\n\nconst TodoListItem = (props) => {\n\n\tconst { label, onDeleted, onToggleImportant, onToggleDone, important, done } = props;\n\tlet classNames = 'todo-list-item';\n\tif (done) {\n\t\tclassNames += ' done';\n\t}\n\n\tif (important) {\n\t\tclassNames += ' important';\n\t}\n\n\treturn (\n\t\t\t<span className={classNames}>\n\t\t\t<span\n\t\t\t\t\tonClick={onToggleDone}\n\t\t\t\t\tclassName='todo-list-item'>\n\t\t\t\t{label}\n\t\t\t</span>\n\n\t\t\t<button type='button'\n\t\t\t        onClick={onDeleted}\n\t\t\t        className='btn btn-outline-danger btn-sm'>\n\t\t\t\t<i className='fa fa-trash-o'/>\n\t\t\t</button>\n\n\t\t\t<button type='button'\n\t\t\t        onClick={onToggleImportant}\n\t\t\t        className='btn btn-outline-success btn-sm'>\n\t\t\t\t<i className='fa fa-exclamation'/>\n\t\t\t</button>\n\n\n\t\t\t</span>\n\t);\n}\n\nexport default TodoListItem","import TodoList from './todo-list';\n\nexport default TodoList","import React from 'react';\n\nimport TodoListItem from '../todo-list-item/TodoListItem';\n\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n\tconst elements = todos.map((item) => {\n\t\tconst { id, ...itemProps } = item;\n\t\treturn (\n\t\t\t\t<li key={id} className='list-group-item'>\n\t\t\t\t\t<TodoListItem {...itemProps}\n\t\t\t\t\tonDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t);\n\t});\n\treturn (\n\t\t\t<ul className='list-group todo-list'>\n\t\t\t\t{elements}\n\t\t\t</ul>\n\t);\n};\n\nexport default TodoList;","import React, { Component } from 'react';\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n\n\tstate = {\n\t\tlabel: ''\n\t}\n\n\tonLabelChange = evt => {\n\t\tthis.setState({\n\t\t\tlabel: evt.target.value\n\t\t})\n\t}\n\n\tonSubmit = evt => {\n\t\tevt.preventDefault()\n\t\tthis.props.onItemAdded(this.state.label)\n\t\tthis.setState({\n\t\t\tlabel: ''\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t\t<form className='item-add-form'\n\t\t\t\tonSubmit={this.onSubmit}>\n\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t       className='form-control'\n\t\t\t\t\t       onChange={this.onLabelChange}\n\t\t\t\t\t       value={this.state.label}\n\t\t\t\t\t       placeholder='waths to bee done'/>\n\t\t\t\t\t<button className='btn btn-outline-secondary'\n\t\t\t\t\t        onClick={this.onSubmit}>Add Item\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t);\n\t}\n};\n","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter","import React, { Component } from 'react';\n\nexport default class ItemStatusFilter extends Component {\n\n\tbuttons = [\n\t\t{ name: 'all', label: 'All' },\n\t\t{ name: 'active', label: 'Active' },\n\t\t{ name: 'done', label: 'Done' },\n\t];\n\n\trender() {\n\t\tconst { filter, onFilterChange } = this.props;\n\t\tconst buttons = this.buttons.map(({ name, label }) => {\n\t\t\tconst isActive = filter === name;\n\t\t\tconst clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n\t\t\treturn (\n\t\t\t\t\t<button type='button' className={`btn ${clazz}`}\n\t\t\t\t\t        onClick={() => onFilterChange(name)}\n\t\t\t\t\t        key={name}>{label}</button>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t\t<div className='btn-group'>\n\t\t\t\t\t{buttons}\n\t\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemAddFrom from '../item-add-form/item-add-form';\nimport ItemStatusFilter from '../item-status-filter';\n\nimport './app.css'\n\nexport default class App extends Component {\n\tmaxId = 0;\n\tstate = {\n\t\ttodoData: [\n\t\t\tthis.createTodoItem('Drink Coffee'),\n\t\t\tthis.createTodoItem('Make Avesome'),\n\t\t\tthis.createTodoItem('Okey Lets go'),\n\t\t],\n\t\tterm: '',\n\t\tfilter: 'all',\n\t};\n\n\tcreateTodoItem(label) {\n\t\treturn {\n\t\t\tlabel,\n\t\t\timportant: false,\n\t\t\tdone: false,\n\t\t\tid: this.maxId++,\n\t\t};\n\t}\n\n\tdeleteItem = (id) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst idx = todoData.findIndex(el => el.id === id);\n\t\t\tconst newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n\t\t\treturn {\n\t\t\t\ttodoData: newArray,\n\t\t\t};\n\t\t});\n\t};\n\n\taddItem = (text) => {\n\t\t// generate id ?\n\t\tconst newItem = this.createTodoItem(text);\n\t\t// add element in array ?\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst newArr = [\n\t\t\t\t...todoData,\n\t\t\t\tnewItem,\n\t\t\t];\n\t\t\treturn {\n\t\t\t\ttodoData: newArr,\n\t\t\t};\n\t\t});\n\t};\n\n\ttoggleProperty(arr, id, propName) {\n\t\tconst idx = arr.findIndex(el => el.id === id);\n\n\t\t// 1. update object\n\t\tconst oldItem = arr[idx];\n\t\tconst newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n\t\t// 2. construct new array\n\t\treturn [\n\t\t\t...arr.slice(0, idx),\n\t\t\tnewItem,\n\t\t\t...arr.slice(idx + 1),\n\t\t];\n\t}\n\n\tonToggleImportant = (id) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\treturn {\n\t\t\t\ttodoData: this.toggleProperty(todoData, id, 'important'),\n\t\t\t};\n\t\t});\n\t};\n\n\tonToggleDone = (id) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\treturn {\n\t\t\t\ttodoData: this.toggleProperty(todoData, id, 'done'),\n\t\t\t};\n\t\t});\n\t};\n\n\tsearch = (items, term) => {\n\t\tif (term.length === 0) {\n\t\t\treturn items;\n\t\t}\n\t\treturn items.filter(\n\t\t\t\t(item) => item.label.toLowerCase().indexOf(term.toLowerCase()) > -1);\n\t};\n\n\tsearchItem = (term) => {\n\t\tthis.setState({ term });\n\t};\n\n\tfilter = (items, filter) => {\n\t\tswitch (filter) {\n\t\t\tcase 'all':\n\t\t\t\treturn items;\n\t\t\tcase 'active':\n\t\t\t\treturn items.filter((item) => !item.done);\n\t\t\tcase 'done':\n\t\t\t\treturn items.filter((item) => item.done);\n\t\t\tdefault:\n\t\t\t\treturn items;\n\t\t}\n\t};\n\n\tonFilterChange = (filter) => {\n\t\tthis.setState({ filter });\n\t};\n\n\trender() {\n\t\tconst { todoData, term, filter } = this.state;\n\t\tconst visibleItems = this.filter(this.search(todoData, term), filter);\n\t\tconst doneCount = todoData.filter(el => el.done).length;\n\t\tconst todoCount = todoData.length - doneCount;\n\t\treturn (\n\t\t\t\t<div className='main'>\n\t\t\t\t\t<AppHeader toDo={todoCount} done={doneCount}/>\n\t\t\t\t\t<SearchPanel searchItem={this.searchItem}/>\n\t\t\t\t\t<ItemStatusFilter filter={filter}\n\t\t\t\t\t                  onFilterChange={this.onFilterChange}/>\n\t\t\t\t\t<TodoList todos={visibleItems}\n\t\t\t\t\t          onDeleted={this.deleteItem}\n\t\t\t\t\t          onToggleImportant={this.onToggleImportant}\n\t\t\t\t\t          onToggleDone={this.onToggleDone}\n\t\t\t\t\t/>\n\t\t\t\t\t<ItemAddFrom onItemAdded={this.addItem}/>\n\t\t\t\t</div>\n\t\t);\n\t};\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/app/app';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}